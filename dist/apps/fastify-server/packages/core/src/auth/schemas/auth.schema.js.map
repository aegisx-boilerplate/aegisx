{
  "version": 3,
  "sources": ["../../../../../../../../packages/core/src/auth/schemas/auth.schema.ts"],
  "sourcesContent": ["import { Type } from '@fastify/type-provider-typebox';\n\nexport const RegisterSchema = Type.Object({\n    email: Type.String({ format: 'email' }),\n    password: Type.String({ minLength: 8 }),\n    firstName: Type.String({ minLength: 1 }),\n    lastName: Type.String({ minLength: 1 }),\n    phoneNumber: Type.Optional(Type.String())\n});\n\nexport const LoginSchema = Type.Object({\n    email: Type.String({ format: 'email' }),\n    password: Type.String()\n});\n\nexport const RefreshTokenSchema = Type.Object({\n    refreshToken: Type.String()\n});\n\nexport const RegisterResponseSchema = Type.Object({\n    user: Type.Object({\n        id: Type.String(),\n        email: Type.String(),\n        firstName: Type.String(),\n        lastName: Type.String(),\n        phoneNumber: Type.Optional(Type.String()),\n        isActive: Type.Boolean(),\n        createdAt: Type.String(),\n        updatedAt: Type.String()\n    }),\n    message: Type.String()\n});\n\nexport const LoginResponseSchema = Type.Object({\n    user: Type.Object({\n        id: Type.String(),\n        email: Type.String(),\n        firstName: Type.String(),\n        lastName: Type.String(),\n        roles: Type.Array(Type.String())\n    }),\n    accessToken: Type.String(),\n    refreshToken: Type.String()\n});\n\nexport const RefreshTokenResponseSchema = Type.Object({\n    accessToken: Type.String(),\n    refreshToken: Type.String()\n});\n\nexport const ProfileResponseSchema = Type.Object({\n    id: Type.String(),\n    email: Type.String(),\n    firstName: Type.String(),\n    lastName: Type.String(),\n    phoneNumber: Type.Optional(Type.String()),\n    roles: Type.Array(Type.String()),\n    isActive: Type.Boolean(),\n    lastLoginAt: Type.Optional(Type.String()),\n    createdAt: Type.String(),\n    updatedAt: Type.String()\n});\n\nexport const ErrorResponseSchema = Type.Object({\n    message: Type.String()\n}); "],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAqB;AAEd,MAAM,iBAAiB,kCAAK,OAAO;AAAA,EACtC,OAAO,kCAAK,OAAO,EAAE,QAAQ,QAAQ,CAAC;AAAA,EACtC,UAAU,kCAAK,OAAO,EAAE,WAAW,EAAE,CAAC;AAAA,EACtC,WAAW,kCAAK,OAAO,EAAE,WAAW,EAAE,CAAC;AAAA,EACvC,UAAU,kCAAK,OAAO,EAAE,WAAW,EAAE,CAAC;AAAA,EACtC,aAAa,kCAAK,SAAS,kCAAK,OAAO,CAAC;AAC5C,CAAC;AAEM,MAAM,cAAc,kCAAK,OAAO;AAAA,EACnC,OAAO,kCAAK,OAAO,EAAE,QAAQ,QAAQ,CAAC;AAAA,EACtC,UAAU,kCAAK,OAAO;AAC1B,CAAC;AAEM,MAAM,qBAAqB,kCAAK,OAAO;AAAA,EAC1C,cAAc,kCAAK,OAAO;AAC9B,CAAC;AAEM,MAAM,yBAAyB,kCAAK,OAAO;AAAA,EAC9C,MAAM,kCAAK,OAAO;AAAA,IACd,IAAI,kCAAK,OAAO;AAAA,IAChB,OAAO,kCAAK,OAAO;AAAA,IACnB,WAAW,kCAAK,OAAO;AAAA,IACvB,UAAU,kCAAK,OAAO;AAAA,IACtB,aAAa,kCAAK,SAAS,kCAAK,OAAO,CAAC;AAAA,IACxC,UAAU,kCAAK,QAAQ;AAAA,IACvB,WAAW,kCAAK,OAAO;AAAA,IACvB,WAAW,kCAAK,OAAO;AAAA,EAC3B,CAAC;AAAA,EACD,SAAS,kCAAK,OAAO;AACzB,CAAC;AAEM,MAAM,sBAAsB,kCAAK,OAAO;AAAA,EAC3C,MAAM,kCAAK,OAAO;AAAA,IACd,IAAI,kCAAK,OAAO;AAAA,IAChB,OAAO,kCAAK,OAAO;AAAA,IACnB,WAAW,kCAAK,OAAO;AAAA,IACvB,UAAU,kCAAK,OAAO;AAAA,IACtB,OAAO,kCAAK,MAAM,kCAAK,OAAO,CAAC;AAAA,EACnC,CAAC;AAAA,EACD,aAAa,kCAAK,OAAO;AAAA,EACzB,cAAc,kCAAK,OAAO;AAC9B,CAAC;AAEM,MAAM,6BAA6B,kCAAK,OAAO;AAAA,EAClD,aAAa,kCAAK,OAAO;AAAA,EACzB,cAAc,kCAAK,OAAO;AAC9B,CAAC;AAEM,MAAM,wBAAwB,kCAAK,OAAO;AAAA,EAC7C,IAAI,kCAAK,OAAO;AAAA,EAChB,OAAO,kCAAK,OAAO;AAAA,EACnB,WAAW,kCAAK,OAAO;AAAA,EACvB,UAAU,kCAAK,OAAO;AAAA,EACtB,aAAa,kCAAK,SAAS,kCAAK,OAAO,CAAC;AAAA,EACxC,OAAO,kCAAK,MAAM,kCAAK,OAAO,CAAC;AAAA,EAC/B,UAAU,kCAAK,QAAQ;AAAA,EACvB,aAAa,kCAAK,SAAS,kCAAK,OAAO,CAAC;AAAA,EACxC,WAAW,kCAAK,OAAO;AAAA,EACvB,WAAW,kCAAK,OAAO;AAC3B,CAAC;AAEM,MAAM,sBAAsB,kCAAK,OAAO;AAAA,EAC3C,SAAS,kCAAK,OAAO;AACzB,CAAC;",
  "names": []
}
